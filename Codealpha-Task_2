import java.util.*;
class Stock {
    String symbol;
    double price;
    public Stock(String symbol, double price) {
        this.symbol = symbol;
        this.price = price;
    }
}
class Portfolio {
    Map<String, Integer> stocks;
    double balance;

    public Portfolio() {
        this.stocks = new HashMap<>();
        this.balance =50000.0;
    }
    public void buyStock(Stock stock, int quantity) {
        if (balance >= stock.price * quantity) {
            balance -= stock.price * quantity;
            stocks.put(stock.symbol, stocks.getOrDefault(stock.symbol, 0) + quantity);
            System.out.println("Bought " + quantity + " shares of " + stock.symbol);
        } else {
            System.out.println("Insufficient balance");
        }
    }
    public void sellStock(Stock stock, int quantity) {
        if (stocks.containsKey(stock.symbol) && stocks.get(stock.symbol) >= quantity) {
            balance += stock.price * quantity;
            stocks.put(stock.symbol, stocks.get(stock.symbol) - quantity);
            System.out.println("Sold " + quantity + " shares of " + stock.symbol);
        } else {
            System.out.println("Stock not in portfolio");
        }
    }
    public void printPortfolio() {
        System.out.println("Portfolio:");
        for (Map.Entry<String, Integer> entry : stocks.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
        System.out.println("Balance: " + balance);
    }
}
public class StockTradingPlatform {
    public static void main(String[] args) {
        System.out.println("**Welcome to Stock Trading**");
        Portfolio portfolio = new Portfolio();
        List<Stock> marketData = new ArrayList<>();
        // Simulated market data
        marketData.add(new Stock("AAPL", 150.0));
        marketData.add(new Stock("GOOGL", 2500.0));
        marketData.add(new Stock("MSTF",200.0));

        Scanner S= new Scanner(System.in);
        while (true) {
            System.out.println("1. Buy Stock");
            System.out.println("2. Sell Stock");
            System.out.println("3. Print Portfolio");
            System.out.println("4. Exit");
            System.out.print("Enter your choice:");
            int choice =S.nextInt();
            if (choice == 1) {
                System.out.print("Enter stock symbol: ");
                String symbol =S.next();
                System.out.print("Enter quantity: ");
                int quantity =S.nextInt();
                Stock stock = marketData.stream()
                        .filter(s -> s.symbol.equals(symbol))
                        .findFirst()
                        .orElse(null);
                if (stock != null) {
                    portfolio.buyStock(stock, quantity);
                } else {
                    System.out.println("Stock not found");
                }
            } else if (choice == 2) {
                System.out.print("Enter stock symbol: ");
                String symbol =S.next();
                System.out.print("Enter quantity: ");
                int quantity =S.nextInt();
                Stock stock = marketData.stream()
                        .filter(s -> s.symbol.equals(symbol))
                        .findFirst()
                        .orElse(null);
                if (stock != null) {
                    portfolio.sellStock(stock, quantity);
                } else {
                    System.out.println("Stock not found");
                }
            } else if (choice == 3) {
                portfolio.printPortfolio();
            } else if (choice == 4) {
                System.out.println("Thanks for using.");
                break;
            }
        }
    }
}
